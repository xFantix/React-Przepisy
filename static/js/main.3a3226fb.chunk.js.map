{"version":3,"sources":["style/appStyle.js","context/AppContext.js","style/recipeInformationStyle.js","components/RecipeInformation.js","image/banner-food.jpg","style/bannerStyle.js","components/home/Banner.js","style/topRecipeStyle.js","style/viewRecipeStyle.js","components/ViewRecipe.js","components/home/TopRecipe.js","image/itFood.jpg","image/britFood.jpg","image/indianFood.jpg","style/topKitchenStyle.js","components/home/TopKitchen.js","components/home/Home.js","style/navigationStyle.js","components/Navigation.js","style/searchRecipeStyle.js","components/SearchRecipe.js","style/FavouriteRecipeStyle.js","components/FavouriteRecipe.js","App.js","index.js"],"names":["AppStyle","styled","div","AppContext","createContext","topRecipe","setTopRecipe","recipeInfo","setRecipeInfo","fontMontserrat","Main","Container","ContainerInformation","MainHeader","h2","SmallHeader","h3","IngredientsHeader","MealImage","props","bgImage","ListIngredients","ul","InformationBar","InformationBarParagraph","RecipeListContainer","ol","MainHeaderMobile","ListIngredientsMobile","AddFavButton","button","RecipeInformation","id","match","params","useState","loading","information","recipeInformation","setRecipeInformation","setFavouriteRecipe","useContext","useEffect","API","fetch","then","response","ok","Error","json","data","title","dishTypes","map","el","i","extendedIngredients","originalName","image","readyInMinutes","servings","onClick","InformationBlock","prevState","className","analyzedInstructions","steps","step","bg","Header","MediumHeader","Button","ButtonLink","NavLink","Banner","to","section","HeaderDescription","p","RecipeContainer","ContainerViewRecipe","Image","img","ViewRecipe","src","alt","TopRecipe","results","viewList","Section","LinkContainer","LinkKitchen","Link","KitchenCard","kitchenGB","bgBrit","kitchenItaly","bgItaly","kitchenIndian","bgIndian","KitchenCardHeader","TopKitchen","Home","NavContainer","StyleHeader","NavigationList","ElementOfList","li","LinkList","Navigation","exact","MainContainer","SearchRecipeContainer","InputText","input","SearchForm","form","SearchViewContainer","SearchRecipe","inputValue","setInputValue","searchRecipe","setSearchRecipe","value","onChange","event","target","placeholder","type","FavouriteRecipe","favouriteRecipe","App","Provider","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a3226fb.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AppStyle = styled.div`\r\n    width:100%;\r\n    min-height:100vh;\r\n    display:flex;\r\n    flex-direction:column;\r\n`","import { createContext } from 'react';\r\n\r\nexport const AppContext = createContext({\r\n    topRecipe:[],\r\n    setTopRecipe:()=>{},\r\n    recipeInfo:{},\r\n    setRecipeInfo:()=>{},\r\n});","import styled from 'styled-components';\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\nexport const Main = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    min-height:calc(100vh - 56px);\r\n`\r\nexport const Container = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    \r\n`\r\nexport const ContainerInformation = styled.div`\r\n    width:40%;\r\n    background-color:#F8F8F8;\r\n    @media(max-width:860px)\r\n    {\r\n        display:none;\r\n    }\r\n`\r\nexport const MainHeader = styled.h2`\r\n    font-family:${fontMontserrat};\r\n    padding:50px 15px 0px 15px;\r\n    color:#FFD71D;\r\n    font-weight:700;\r\n    font-size:35px;\r\n    text-transform:uppercase;\r\n`\r\nexport const SmallHeader = styled.h3`\r\n    font-family:${fontMontserrat};\r\n    padding-left:15px;\r\n    padding-top:10px;\r\n    color:#393A3B;\r\n    font-weight:400;\r\n    text-transform:uppercase;\r\n    font-size:18px;\r\n`\r\nexport const IngredientsHeader = styled.h3`\r\n    font-family:${fontMontserrat};\r\n    padding-left:15px;\r\n    padding-top:40px;\r\n    color:#393A3B;\r\n    font-size:25px;\r\n    text-transform:uppercase;\r\n`\r\nexport const  MealImage = styled.div`\r\n    width:60%;\r\n    background-image:url(${props=>props.bgImage});\r\n    background-position:center;\r\n    background-size:cover;\r\n    position: relative;\r\n    @media(max-width:860px)\r\n    {\r\n        width:100%;\r\n        background:linear-gradient(rgba(0,0,0,0.4),rgba(0,0,0,0.405)),url(${props=>props.bgImage});\r\n        background-position:center;\r\n        background-size:cover;\r\n        background-repeat:no-repeat;\r\n        display:flex;\r\n        flex-direction:column;\r\n    }\r\n`\r\nexport const ListIngredients = styled.ul`\r\n    padding:20px 0px 0px 35px;\r\n    font-family:${fontMontserrat};\r\n    font-size:20px;\r\n`\r\nexport const InformationBar = styled.div`\r\n    width:100%;\r\n    justify-content:space-around;\r\n    align-items:center;\r\n    background-color:#FFD71D;\r\n    position:absolute;\r\n    bottom:0;\r\n    display:flex;\r\n`\r\nexport const InformationBarParagraph = styled.div`\r\n    font-family:${fontMontserrat};\r\n    font-size:20px;\r\n    padding:10px 0px;\r\n`\r\nexport const RecipeListContainer = styled.ol`\r\n    padding:30px 30px;\r\n    font-family:${fontMontserrat};\r\n    &>li{\r\n        padding-top:10px;\r\n    }\r\n`\r\nexport const MainHeaderMobile = styled.h2`\r\n font-family:${fontMontserrat};\r\n    padding:50px 0px;\r\n    color:#FFD71D;\r\n    font-weight:700;\r\n    font-size:45px;\r\n    text-transform:uppercase;\r\n    text-align:center;\r\n    @media(min-width:861px){\r\n        display:none;\r\n    }\r\n`\r\nexport const ListIngredientsMobile = styled.ul`\r\n    text-align:center;\r\n    font-family:${fontMontserrat};\r\n    font-size:25px;\r\n    text-transform:uppercase;\r\n    letter-spacing:3px;\r\n    list-style:none;\r\n    padding-bottom:95px;\r\n    color:white;\r\n    @media(min-width:861px){\r\n        display:none;\r\n    }\r\n`\r\nexport const AddFavButton = styled.button`\r\n    background-color:transparent;\r\n    border:none;\r\n    cursor: pointer;\r\n    font-size:20px;\r\n`\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport * as style from \"../style/recipeInformationStyle\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nconst RecipeInformation = (props) => {\r\n  const { id } = props.match.params;\r\n\r\n  const [recipeInformation, setRecipeInformation] = useState({\r\n    loading: true,\r\n    information: {},\r\n  });\r\n\r\n  const { setFavouriteRecipe } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    const API = `https://api.spoonacular.com/recipes/${id}/information?apiKey=210c10f0f72a4f999d2c566a257ce155`;\r\n\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Dont work :(\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRecipeInformation({\r\n          information: { ...data },\r\n          loading: false,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const AddFavouriteRecipeToList = () => {\r\n    const InformationBlock = {\r\n      title: \"\",\r\n      id: \"\",\r\n      image: \"\",\r\n    };\r\n    InformationBlock.title = recipeInformation.information.title;\r\n    InformationBlock.image = recipeInformation.information.image;\r\n    InformationBlock.id = recipeInformation.information.id;\r\n\r\n    setFavouriteRecipe((prevState) => [...prevState, InformationBlock]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!recipeInformation.loading && (\r\n        <style.Container>\r\n          <style.Main>\r\n            <style.ContainerInformation>\r\n              <style.MainHeader>\r\n                {recipeInformation.information.title}\r\n              </style.MainHeader>\r\n              <style.SmallHeader>\r\n                {recipeInformation.information.dishTypes.map((el, i) => (\r\n                  <p key={i}>{el}</p>\r\n                ))}\r\n              </style.SmallHeader>\r\n              <style.IngredientsHeader>Ingredients</style.IngredientsHeader>\r\n              <style.ListIngredients>\r\n                {recipeInformation.information.extendedIngredients.map(\r\n                  (el, i) => (\r\n                    <li key={i}>{el.originalName}</li>\r\n                  )\r\n                )}\r\n              </style.ListIngredients>\r\n            </style.ContainerInformation>\r\n            <style.MealImage bgImage={recipeInformation.information.image}>\r\n              <style.MainHeaderMobile>\r\n                {recipeInformation.information.title}\r\n              </style.MainHeaderMobile>\r\n              <style.ListIngredientsMobile>\r\n                {recipeInformation.information.extendedIngredients.map(\r\n                  (el, i) => (\r\n                    <li key={i}>{el.originalName}</li>\r\n                  )\r\n                )}\r\n              </style.ListIngredientsMobile>\r\n              <style.InformationBar>\r\n                <style.InformationBarParagraph>\r\n                  {recipeInformation.information.readyInMinutes} minutes\r\n                </style.InformationBarParagraph>\r\n                <style.InformationBarParagraph>\r\n                  {recipeInformation.information.servings} servings\r\n                </style.InformationBarParagraph>\r\n                <style.AddFavButton onClick={AddFavouriteRecipeToList}>\r\n                  <i className=\"far fa-heart\"></i>\r\n                </style.AddFavButton>\r\n              </style.InformationBar>\r\n            </style.MealImage>\r\n          </style.Main>\r\n          <style.RecipeListContainer>\r\n            {recipeInformation.information.analyzedInstructions.map((el) =>\r\n              el.steps.map((el, i) => <li key={i}>{el.step}</li>)\r\n            )}\r\n          </style.RecipeListContainer>\r\n        </style.Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeInformation;\r\n","export default __webpack_public_path__ + \"static/media/banner-food.6b517c6b.jpg\";","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport bg from '../image/banner-food.jpg';\r\n\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\n\r\nexport const Container = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    text-align:center;\r\n    justify-content:center;\r\n    background-image:linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.405)),url(${bg});\r\n    height:600px;\r\n    background-position:top;\r\n    background-size:cover;\r\n`\r\nexport const Header = styled.h2`\r\n    font-family:${fontMontserrat};\r\n    color:white;\r\n    font-size:45px;\r\n`\r\nexport const MediumHeader = styled.h3`\r\n    font-family:${fontMontserrat};\r\n    color:white;\r\n    font-weight:300;\r\n`\r\nexport const Button = styled.button`\r\n  padding: 10px 40px;\r\n    background-color:#FFD800;\r\n    font-family:${fontMontserrat};\r\n    border: none;\r\n    color: white;\r\n    font-size: 25px;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    margin-top:45px;\r\n`\r\nexport const ButtonLink = styled(NavLink)`\r\n    display: block;\r\n    text-align: center;\r\n`\r\n\r\n\r\n","import React from \"react\";\r\nimport * as style from \"../../style/bannerStyle\";\r\nconst Banner = () => {\r\n  return (\r\n    <style.Container>\r\n      <style.Header>Cuisine of the whole world in one place</style.Header>\r\n      <style.MediumHeader>\r\n        Check out hundreds of recipes from around the world and surprise your\r\n        family and friends\r\n      </style.MediumHeader>\r\n      <style.ButtonLink to=\"/searchRecipe\">\r\n        <style.Button>Check out recipe</style.Button>\r\n      </style.ButtonLink>\r\n    </style.Container>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import styled from 'styled-components';\r\n\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\n\r\nexport const Container = styled.section`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nexport const Header = styled.h2`\r\n    text-align:center;\r\n    font-family:${fontMontserrat};\r\n    text-transform:uppercase;\r\n    color:#282627;\r\n    padding-top:40px;\r\n    font-size:30px;\r\n`\r\nexport const HeaderDescription = styled.p`\r\n    font-family:${fontMontserrat};\r\n    text-align:center;\r\n    color:#282627;\r\n`\r\nexport const RecipeContainer = styled.div`\r\n    width:100%;\r\n    flex-wrap:wrap;\r\n    display:flex;\r\n    justify-content:space-around;\r\n`","import styled from 'styled-components';\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\nexport const ContainerViewRecipe = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:350px;\r\n    margin-top:30px;\r\n    overflow:hidden;\r\n`\r\nexport const Header = styled.h2`\r\n    font-family:${fontMontserrat};\r\n    font-size:20px;\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    color:#282627;\r\n    padding-top:15px;\r\n    display:block;\r\n    min-height:65px;\r\n`\r\nexport const Button = styled.button`\r\n    background-color:#FFD800;\r\n    border:none;\r\n    color:white;\r\n    font-family:${fontMontserrat};\r\n    font-weight:700;\r\n    cursor: pointer;\r\n    padding:10px 0px;\r\n    width:100%;\r\n`\r\nexport const Image = styled.img`\r\n    border-radius:5px;\r\n    overflow:hidden;\r\n`","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as style from \"../style/viewRecipeStyle\";\r\nconst ViewRecipe = (props) => {\r\n  const { title, image, id } = props.el;\r\n\r\n  return (\r\n    <style.ContainerViewRecipe>\r\n      <style.Image src={image} alt=\"image food\" />\r\n      <style.Header>{title}</style.Header>\r\n      <Link to={`/recipe/${id}`}>\r\n        <style.Button>Let's cook</style.Button>\r\n      </Link>\r\n    </style.ContainerViewRecipe>\r\n  );\r\n};\r\n\r\nexport default ViewRecipe;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport * as style from \"../../style/topRecipeStyle\";\r\nimport ViewRecipe from \"../ViewRecipe\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nconst TopRecipe = () => {\r\n  const { topRecipe, setTopRecipe } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    const API =\r\n      \"https://api.spoonacular.com/recipes/complexSearch?instructionsRequired=true&number=4&apiKey=210c10f0f72a4f999d2c566a257ce155\";\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Dont work :(\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTopRecipe(data.results);\r\n      });\r\n  }, []);\r\n\r\n  const viewList = topRecipe.map((el) => <ViewRecipe key={el.id} el={el} />);\r\n\r\n  return (\r\n    <style.Container>\r\n      <style.Header>Top recipe on the website</style.Header>\r\n      <style.HeaderDescription>\r\n        Are you looking for an idea for an interesting dinner?\r\n      </style.HeaderDescription>\r\n      <style.RecipeContainer>{viewList}</style.RecipeContainer>\r\n    </style.Container>\r\n  );\r\n};\r\n\r\nexport default TopRecipe;\r\n","export default __webpack_public_path__ + \"static/media/itFood.3d83765f.jpg\";","export default __webpack_public_path__ + \"static/media/britFood.03c129c2.jpg\";","export default __webpack_public_path__ + \"static/media/indianFood.a060d54b.jpg\";","import styled from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nimport bgItaly from '../image/itFood.jpg';\r\nimport bgBrit from '../image/britFood.jpg';\r\nimport bgIndian from '../image/indianFood.jpg'\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\nexport const Section = styled.section`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nexport const Header = styled.h2`\r\n    text-align:center;\r\n    font-family:${fontMontserrat};\r\n    text-transform:uppercase;\r\n    color:#282627;\r\n    padding-top:40px;\r\n    font-size:30px;\r\n`\r\nexport const HeaderDescription = styled.p`\r\n    font-family:${fontMontserrat};\r\n    text-align:center;\r\n    color:#282627;\r\n`\r\nexport const LinkContainer = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n    flex-wrap:wrap;\r\n`\r\nexport const LinkKitchen = styled(Link)`\r\n    width:350px;\r\n    height:200px;\r\n    margin-top:30px;\r\n`\r\nexport const KitchenCard = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    position:relative;\r\n    background-position:center;\r\n    background-size:cover;\r\n    background-image:url(${props=>(props.kitchenGB && bgBrit) || (props.kitchenItaly && bgItaly) || (props.kitchenIndian && bgIndian) });\r\n`\r\nexport const KitchenCardHeader = styled.h2`\r\n    position:absolute;\r\n    font-family:${fontMontserrat};\r\n    color:black;\r\n    bottom:0;\r\n    right:0;\r\n    padding:10px 10px;\r\n    display:block;\r\n    background-color:white;\r\n`\r\n","import React from \"react\";\r\nimport * as style from \"../../style/topKitchenStyle\";\r\n\r\nconst TopKitchen = () => {\r\n  return (\r\n    <style.Section>\r\n      <style.Header>Top Kitchen</style.Header>\r\n      <style.HeaderDescription>\r\n        The most interesting flavors from around the world\r\n      </style.HeaderDescription>\r\n      <style.LinkContainer>\r\n        <style.LinkKitchen to=\"/\">\r\n          <style.KitchenCard kitchenGB>\r\n            <style.KitchenCardHeader>British Kitchen</style.KitchenCardHeader>\r\n          </style.KitchenCard>\r\n        </style.LinkKitchen>\r\n        <style.LinkKitchen to=\"/\">\r\n          <style.KitchenCard kitchenItaly>\r\n            <style.KitchenCardHeader>Italy Kitchen</style.KitchenCardHeader>\r\n          </style.KitchenCard>\r\n        </style.LinkKitchen>\r\n        <style.LinkKitchen to=\"/\">\r\n          <style.KitchenCard kitchenIndian>\r\n            <style.KitchenCardHeader>Indian Kitchen</style.KitchenCardHeader>\r\n          </style.KitchenCard>\r\n        </style.LinkKitchen>\r\n      </style.LinkContainer>\r\n    </style.Section>\r\n  );\r\n};\r\n\r\nexport default TopKitchen;\r\n","import React from \"react\";\r\nimport Banner from \"./Banner\";\r\nimport TopRecipe from \"./TopRecipe\";\r\nimport TopKitchen from \"./TopKitchen\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <TopRecipe />\r\n      <TopKitchen />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\n\r\nexport const NavContainer = styled.div`\r\n    width:100%;\r\n    background-color:rgba(36,37,38,.9);\r\n    box-shadow:0 1px 6px rgba(0,0,0,0.5);\r\n    display:flex;\r\n    justify-content:space-between;\r\n`\r\n\r\nexport const StyleHeader = styled(NavLink)`\r\n    font-family:${fontMontserrat};\r\n    text-transform:uppercase;\r\n    font-weight:600;\r\n    color:#FFD800;\r\n    padding:10px 40px;\r\n    text-decoration:none;\r\n    font-size:30px;\r\n`\r\nexport const NavigationList = styled.ul`\r\n    display:flex;\r\n    list-style:none;\r\n    align-items:center;\r\n    padding-right:40px;\r\n`\r\nexport const ElementOfList = styled.li`\r\n    text-decoration:none;\r\n    color:white;\r\n    padding:0px 10px;\r\n    @media(max-width:860px){\r\n        &:nth-child(1){\r\n            display:none;\r\n        }\r\n    }\r\n`\r\nexport const LinkList = styled(NavLink)`\r\n    color:white;\r\n    text-decoration:none;\r\n    font-family:${fontMontserrat};\r\n`\r\n\r\n\r\n","import React from \"react\";\r\nimport * as style from \"../style/navigationStyle\";\r\nconst Navigation = () => {\r\n  return (\r\n    <style.NavContainer>\r\n      <style.StyleHeader exact to=\"/\">\r\n        BestRecipe\r\n      </style.StyleHeader>\r\n      <style.NavigationList>\r\n        <style.ElementOfList>\r\n          <style.LinkList to=\"/searchRecipe\">Recipe</style.LinkList>\r\n        </style.ElementOfList>\r\n        <style.ElementOfList>\r\n          <style.LinkList to=\"/favouriteRecipe\">\r\n            <i className=\"far fa-heart\"></i>\r\n          </style.LinkList>\r\n        </style.ElementOfList>\r\n      </style.NavigationList>\r\n    </style.NavContainer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from 'styled-components';\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\n\r\nexport const MainContainer = styled.div`\r\n    width:100%;\r\n    min-height:100vh;\r\n    display:flex;\r\n    padding:30px 40px 0px;\r\n    @media(max-width:860px){\r\n        padding:30px 0px;\r\n    }\r\n`\r\n\r\nexport const SearchRecipeContainer = styled.div`\r\n  padding:0px 90px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    \r\n`\r\nexport const InputText = styled.input`\r\n    width:60%;\r\n    height:40px;\r\n    border-radius:3px;\r\n    border:2px solid #FFD800;\r\n    outline:none;\r\n    font-family:${fontMontserrat};\r\n    padding:10px;\r\n`\r\nexport const SearchForm = styled.form`\r\n    width:100%;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    padding:30px 0px;\r\n`\r\nexport const SearchViewContainer = styled.div`\r\n    display:flex;\r\n    width:100%;\r\n    flex-wrap:wrap;\r\n    justify-content:space-around;\r\n`\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as style from \"../style/searchRecipeStyle\";\r\nimport ViewRecipe from \"./ViewRecipe\";\r\nconst SearchRecipe = () => {\r\n  \r\n\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const [searchRecipe, setSearchRecipe] = useState({\r\n    loading: true,\r\n    information: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const API = `https://api.spoonacular.com/recipes/complexSearch?query=${inputValue}&instructionsRequired=true&number=99&apiKey=210c10f0f72a4f999d2c566a257ce155`;\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Dont work :(\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setSearchRecipe({\r\n          information: data.results,\r\n          loading: false,\r\n        });\r\n      });\r\n  }, [inputValue]);\r\n\r\n  const viewSearch = searchRecipe.information.map((el) => (\r\n    <ViewRecipe key={el.id} el={el} />\r\n  ));\r\n\r\n\r\n  return (\r\n    <>\r\n      {!SearchRecipe.loading && (\r\n        <style.MainContainer>\r\n          <style.SearchRecipeContainer>\r\n            <style.SearchForm>\r\n              <style.InputText\r\n                value={inputValue}\r\n                onChange={(event) => setInputValue(event.target.value)}\r\n                placeholder=\"What do you want?\"\r\n                type=\"text\"\r\n              />\r\n            </style.SearchForm>\r\n            <style.SearchViewContainer>\r\n              {searchRecipe.information.map((el) => (\r\n                <ViewRecipe key={el.id} el={el} />\r\n              ))}\r\n            </style.SearchViewContainer>\r\n          </style.SearchRecipeContainer>\r\n        </style.MainContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchRecipe;\r\n","import styled from 'styled-components';\r\nconst fontMontserrat = \"'Montserrat', sans-serif\";\r\nexport const MainContainer = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n`\r\nexport const ElementContainer = styled.div`\r\n    padding:15px;\r\n    font-family:${fontMontserrat};\r\n    border-bottom:1px solid white;\r\n    cursor: pointer;\r\n`\r\nexport const Header =  styled.h2`\r\n    text-align:center;\r\n    font-family:${fontMontserrat};\r\n    text-transform:uppercase;\r\n    color:#282627;\r\n    padding-top:40px;\r\n    font-size:30px;\r\n`\r\nexport const RecipeContainer = styled.div`\r\n    display:flex;\r\n    padding:0px 40px;\r\n    justify-content:space-around;\r\n    flex-wrap:wrap;\r\n`\r\n","import React, { useContext } from \"react\";\r\nimport * as style from \"../style/FavouriteRecipeStyle\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport ViewRecipe from \"./ViewRecipe\";\r\nconst FavouriteRecipe = () => {\r\n  const { favouriteRecipe } = useContext(AppContext);\r\n  return (\r\n    <>\r\n      <style.MainContainer>\r\n        <style.Header>Your Favourite Recipe</style.Header>\r\n        <style.RecipeContainer>\r\n          {favouriteRecipe.map((el) => (\r\n            <ViewRecipe key={el.id} el={el} />\r\n          ))}\r\n        </style.RecipeContainer>\r\n      </style.MainContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavouriteRecipe;\r\n","import React, { useState } from \"react\";\nimport * as style from \"./style/appStyle\";\nimport \"./style/index.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { AppContext } from \"./context/AppContext\";\nimport RecipeInformation from './components/RecipeInformation';\nimport Home from \"./components/home/Home\";\nimport Navigation from \"./components/Navigation\";\nimport SearchRecipe from \"./components/SearchRecipe\";\nimport FavouriteRecipe from './components/FavouriteRecipe'\nconst App = () => {\n  const [topRecipe, setTopRecipe] = useState([]);\n  const [recipeInfo,setRecipeInfo] = useState({});\n  const[favouriteRecipe,setFavouriteRecipe] = useState([]);\n\n  return (\n    <Router>\n      <AppContext.Provider\n        value={{\n          favouriteRecipe,\n          setFavouriteRecipe,\n          topRecipe,\n          setTopRecipe,\n          recipeInfo,\n          setRecipeInfo,\n        }}\n      >\n        <style.AppStyle>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/recipe/:id\" component={RecipeInformation} />\n            <Route path=\"/searchRecipe\" component={SearchRecipe}/>\n            <Route path=\"/favouriteRecipe\" component={FavouriteRecipe}/>\n          </Switch>\n        </style.AppStyle>\n      </AppContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}